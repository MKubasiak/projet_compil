/*
 * analyseur syntaxique  du langage exemple-expr:
 * expression arithmetique
 * (voir supports de cours)
 *
 */ 
package fr.ul.miage.exemple.generated;

/* la grammaire */



non terminal programme, while, for, declaration, commentaire, doc, if, else, affectation, retourne, afficher, lire, function, 
param, expr, expression, operation, methode, text, typevariable, bloc, instruction, condition ,conditionPour, facteur, atome;
terminal TQ, PR, PD,NUM, PG, ACD, ACG, ET, OU, PLUS, FOIS, MOINS, DIV, NOM, AFFECTE, SI, SINON, TYPE, FONCTION, DP, RT, LIR,
 STRING, FIN, COM, FCOM, AFFICH, ENTREE, VIRGULE, IDF, CONSTANTE;
/* 	TQ : Tant que ; 
	PR : Pour ; 
	PD : Parenth�se droite ; 
	PG : Parenth�se gauche ; 
	ACD : Accolade gauche ; 
	ACG : Accolade droite ; 
	DP : Double point ; 
	IDF : Identifiant
	RT : Retourne */


start with programme;
programme ::= function|
			;

function ::= FONCTION TYPE IDF PG param PD ACG bloc ACD;

param ::= 	TYPE IDF |
			TYPE IDF VIRGULE param |
			;

bloc ::= instruction bloc |
			;
instruction ::= while |
			for |
			declaration |
			if |
			else |
			affectation |
			retourne |
			afficher |
			lire |
			function |
			FIN;
		
			
while ::= TQ PG condition PD ACG bloc ACD;

for ::= PR PG conditionPour PD ACG programme ACD;

declaration ::= TYPE IDF |
				TYPE IDF VIRGULE declaration |
				TYPE affectation ;

affectation ::= IDF AFFECTE IDF |
		   IDF AFFECTE expression ;
		   //IDF AFFECTE methode;


if ::= SI PG condition PD ACG bloc ACD else;

else ::= SINON PG condition PD ACG bloc ACD|
			;

retourne ::= RT expression ;

afficher ::= AFFICH PG expression PD;

lire ::= LIR PG PD;

expression ::= expression PLUS facteur |
				expression MOINS facteur |
				facteur;

facteur ::= facteur DIV atome |
			facteur FOIS atome |
			atome;
			
atome ::= IDF | CONSTANTE | lire | PG expression PD;


