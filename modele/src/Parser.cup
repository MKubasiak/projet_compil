/*
 * analyseur syntaxique  du langage exemple-expr:
 * expression arithmetique
 * (voir supports de cours)
 *
 */ 
package fr.ul.miage.exemple.generated;

/* la grammaire */



non terminal programme,function,param, bloc,instruction;
terminal PD, PG, ACD, ACG, TYPE, FONCTION, FIN, VIRGULE, IDF, CONSTANTE, DIV, MOINS, PLUS, ET, OU, SI, FOIS, AFFECTE, DP, PR, SINON,
TQ,LIR,RT,AFFICH;
/* 	TQ : Tant que ; 
	PR : Pour ; 
	PD : Parenth�se droite ; 
	PG : Parenth�se gauche ; 
	ACD : Accolade gauche ; 
	ACG : Accolade droite ; 
	DP : Double point ; 
	IDF : Identifiant
	RT : Retourne */


start with programme;
programme ::= function|
			;

function ::= FONCTION TYPE IDF PG param PD ACG bloc ACD;

param ::= 	TYPE IDF |
			TYPE IDF VIRGULE param |
			;

bloc ::= instruction bloc |
			;
			
instruction ::= FIN;

/*
			while |
			for |
			declaration |
			if |
			else |
			affectation |
			retourne |
			afficher |
			lire |
			function;
		
			
while ::= TQ PG condition PD ACG bloc ACD;

for ::= PR PG conditionPour PD ACG programme ACD;

declaration ::= TYPE IDF |
				TYPE IDF VIRGULE declaration |
				TYPE affectation ;

affectation ::= IDF AFFECTE IDF |
		   IDF AFFECTE expression ;
		   //IDF AFFECTE methode;


if ::= SI PG condition PD ACG bloc ACD else;

else ::= SINON PG condition PD ACG bloc ACD|
			;

condition ::= ;			

retourne ::= RT expression ;

afficher ::= AFFICH PG expression PD;

lire ::= LIR PG PD;

expression ::= expression PLUS facteur |
			   expression MOINS facteur |
			   facteur;

facteur ::= facteur DIV atome |
			facteur FOIS atome |
			atome;
			
atome ::= IDF | CONSTANTE | lire | PG expression PD;

*/