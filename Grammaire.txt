// Test 0

/*
 * Test plus complet pour savoir si l'analyseur
 * syntaxique fonctionne
 */
 
 fonction void main(){
 int i <- 0 ;
 int j; 
 
 	fonction int f(int a, int b){
		int x;
		x <- (a**2)+b-5/3;
		retourne x+2;
 	}
 
 int j <- lire();
 afficher(f(i+1,j));
}


// Test 1

/*
 * Le plus petit programme
 */

 
fonction void main(){
 }
 
 
// Test 2

/*
 * Test generation de code : variables globales
 */
fonction void main(){ 
 int i <- 0;
 int j, k;
 
 k <- 1;
 j <- k;
 k <- i; 
}


// Test 3

/*
 * Une expression simple
 */
 
fonction void main(){
 int i;
 int j <- 1;
 i <- 6+j/3; /*tester ceci*/
}	


// Test 4

/*
 * Test d'une expression arithmetique
 */

fonction void main(){ 
 int i, j;
 i <- 0;
 j <- (2+i) - (3+i);
}


// Test 5

/*
 * Une expression arithmethique
 */

fonction void main(){ 
 int x;
 int a <- 1;
 int b <- 2;
  
 x <- (a**2)+b-5/3;
}


// Test 6 

/*
 * Variables locales
 */

fonction void main(){
 int i,j,k;

	fonction int f(){
		int i;
	
		i <- 1;
		j <- i + g();
		retourne j;
	}

	fonction int g(){
		int j, l2, l3, l4;
	
		l2 <- 2; l3 <- 3; l4 <- 4;
		j <- 10 + l2 + l3 + l4;

		retourne i+j;
	}

 i<-0;
 j<-1;
 k<-f();	

}


// Test 7

/*
 * une fonction (appel)
 */
 
fonction void main(){
 int i <- 0;
 int j <- 0;

	fonction int f(int a, int b){
		int x, y, z;
		retourne 0;
 	}
 	
 i <- f(i,j); /*tester ceci*/

}


// Test 8

/*
 * Une expression avec un appel
 */
 
fonction void main(){
 int i <- 1;
 int j <- 2;

 fonction int f(int a){
	retourne 3;
 }

 i <- j-(3+f(i+j));/*tester ceci*/
}


// Test 9

/*
 * adressage de variable locale
 */

fonction void main(){
 int i <- 0;
 int j;

fonction int f(int a){
	int x;
	x <- a+1;
	retourne x;
 }

 j <- f(i);
}


// Test 10

/*
 * conditionnelle
 */
 
fonction void main(){
 int i <- 3; int j;
	si (i < 2){
		j <- 0;
	}sinon{
		j <- 1;
	}
}


// Test 11

/*
 * boucle
 */
 
fonction void main(){
 int i , j;
	i <- 0; j <- 0;
	tantque (i <3){
		j <- j + i;
	} 
}



// Test 12

/*
 * recursivite
 */
 
fonction void main(){ 
 int x ;

 fonction int f(int n){
	 si (n>0){
		retourne 0;
	 }
	 retourne (n+f(n-1));
 }
 x <- f(5);
}


// Test 13

/*
 * Test d'erreur syntaxique
 */
 
fonction void main(){ 
// normalement pas ca
 int i; int j <- 0;
 
 fonction int f(int a, int b){
	int x;
	
	x<-(a**2)+b-5/3; /*erreur ; attendu */
	
	retourne x+2;
 } 
	 j <- read();
	 afficher(f(i+1,j));
}


// Test 14

/*
 * Test de controle semantique
 */
 
fonction void main(){ 
 int i;
 int i; /* erreur : double definition */
 
	i <- 0;
}


// Test 15

/*
 * Test de controle semantique
 */
 
fonction void main(){
	i <- 0; /* erreur : variable non definie */
 }


// Test 16

/*
 * Test de controle semantique 
 */

fonction void main(){ 
 int i;
 
fonction void f(){
	int x;
	x<-0;
 }
 
 i <- i + f(); /* erreur : compatibilite de type */
}


// Test 17

/*
 * Test de controle semantique
 */
 
fonction void main(){ 
 int i;
 
 fonction void f(int a, int b){
	int x;
	x<-0;
 }
 
 f(i); /* erreur : nombre de parametres */
}
 

 
 
